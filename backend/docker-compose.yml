version: '3.8'

services:
  okr-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: okr-flow-backend
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - HOST=0.0.0.0
      - PORT=8000
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Variáveis Supabase (serão lidas do .env)
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      # Configurações opcionais
      - ASAAS_API_KEY=${ASAAS_API_KEY:-}
      - ASAAS_BASE_URL=${ASAAS_BASE_URL:-https://www.asaas.com/api/v3}
      - WORKERS_COUNT=${WORKERS_COUNT:-4}
      - TIMEOUT_KEEP_ALIVE=${TIMEOUT_KEEP_ALIVE:-65}
      - ENABLE_GZIP=${ENABLE_GZIP:-true}
      - LOG_LEVEL=${LOG_LEVEL:-WARNING}
    env_file:
      - .env
    volumes:
      # Volume para persistir logs (opcional)
      - ./logs:/app/logs:rw
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - okr-network

networks:
  okr-network:
    driver: bridge

# Para usar este docker-compose:
# 1. Certifique-se de ter um arquivo .env com as credenciais Supabase
# 2. Execute: docker-compose up -d
# 3. Para parar: docker-compose down
# 4. Para ver logs: docker-compose logs -f
# 5. Para atualizar: docker-compose pull && docker-compose up -d 